{"version":3,"sources":["black.svg","white.svg","logo.svg","board.js","serviceWorker.js","index.js"],"names":["module","exports","allowDrop","ev","preventDefault","Stone","props","stone","color","bstone","wstone","className","id","value","src","draggable","onDragStart","drag","alt","calculateWinner","squares","lines","i","length","a","b","c","Math","abs","Boolean","Board","state","square","Array","fill","nextplayer","step","onemore","repeat","initialize","bind","this","setState","dataTransfer","setData","target","a3","toString","split","map","Number","b3","unshift","player","index_from","index_empty","push","possible_move","j","neighbor","index","floor","random","depth","current_state","slice","possibility","results","k","_player","rand_move","count","forEach","x","console","log","max","indexOf","from","getData","parseInt","currentState","nxtnextplayer","nxtstep","setTimeout","evol_move","status","winner","onDrop","drop","onDragOver","onChange","e","class","onClick","style","fontSize","React","Component","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97be8841.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/black.63929d1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/white.4a343105.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport bstone from \"./black.svg\";\nimport wstone from \"./white.svg\";\nimport \"./board.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction allowDrop(ev) {\n  ev.preventDefault();\n}\n// function drag(ev) {\n//   ev.dataTransfer.setData(\"text\", ev.target.id);\n//   console.log(\"dragged\");\n// }\n// function drop(ev) {\n//   ev.preventDefault();\n//   var data = ev.dataTransfer.getData(\"text\");\n//   console.log(\"dropped\");\n// }\nfunction Stone(props) {\n  let stone = props.color === \"b\" ? bstone : wstone;\n  return (\n    <div className=\"checker\" id={props.value}>\n      <img\n        className=\"stone\"\n        id={props.value}\n        src={stone}\n        draggable=\"true\"\n        onDragStart={props.drag}\n        // onDragOver={props.dragover}\n        alt=\"Logo\"\n      />\n    </div>\n  );\n}\nfunction calculateWinner(squares) {\n  const lines = [\n    //   [0, 1, 2],\n    [3, 4, 5],\n    //   [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (\n      Math.abs(squares[a]) &&\n      squares[a] === squares[b] &&\n      squares[a] === squares[c]\n    ) {\n      return Boolean(squares[a] + 1) ? 1 : -1;\n    }\n  }\n  return 0;\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      square: Array(9).fill(0),\n      nextplayer: null,\n      step: 0,\n      onemore: 0,\n      repeat: 30,\n    };\n    this.initialize = this.initialize.bind(this);\n  }\n  bmove() {\n    this.setState({\n      square: [1, -1, -1, 0, 0, 0, 1, 1, -1],\n    });\n  }\n  initialize() {\n    this.setState({\n      square: [1, 1, 1, 0, 0, 0, -1, -1, -1],\n      nextplayer: 1,\n      step: 0,\n    });\n  }\n  drag(ev) {\n    ev.dataTransfer.setData(\"text\", ev.target.id);\n  }\n  neighbor(a, b) {\n    if (a === 4 || b === 4) {\n      return true;\n    } else {\n      var a3 = a.toString(3).split(\"\").map(Number);\n      var b3 = b.toString(3).split(\"\").map(Number);\n      if (a3.length === 1) {\n        a3.unshift(0);\n      }\n      if (b3.length === 1) {\n        b3.unshift(0);\n      }\n      if (\n        (Math.abs(a3[0] - b3[0]) === 1 && Math.abs(a3[1] - b3[1]) === 0) ||\n        (Math.abs(a3[0] - b3[0]) === 0 && Math.abs(a3[1] - b3[1]) === 1)\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n  // dragover(ev) {\n  //   console.log(\"dragOver\");\n  //   ev.preventDefault();\n  //   ev.currentTarget.style.background = \"lightyellow\";\n  // }\n  rand_move(state, player) {\n    // let current_state = state.slice();\n    let index_from = [];\n    let index_empty = [];\n    for (let i = 0; i < 9; i++) {\n      if (state[i] === player) {\n        index_from.push(i);\n      }\n      if (state[i] === 0) {\n        index_empty.push(i);\n      }\n    }\n    // console.log(\"empty \" + index_empty);\n    let possible_move = [];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (this.neighbor(index_from[i], index_empty[j])) {\n          possible_move.push([index_from[i], index_empty[j]]);\n        }\n      }\n    }\n    if (possible_move.length !== 0) {\n      let index = Math.floor(Math.random() * possible_move.length);\n      state[possible_move[index][0]] = 0;\n      state[possible_move[index][1]] = player;\n    }\n  }\n\n  evol_move(state, player, repeat = 500, depth = 500) {\n    let current_state = state.slice();\n    let index_from = [];\n    let index_empty = [];\n    for (let i = 0; i < 9; i++) {\n      if (current_state[i] === player) {\n        index_from.push(i);\n      } else if (current_state[i] === 0) {\n        index_empty.push(i);\n      }\n    }\n    let possible_move = [];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (this.neighbor(index_from[i], index_empty[j])) {\n          possible_move.push([index_from[i], index_empty[j]]);\n        }\n      }\n    }\n    let possibility = [];\n    for (let i = 0; i < possible_move.length; i++) {\n      current_state = state.slice();\n      current_state[possible_move[i][0]] = 0;\n      current_state[possible_move[i][1]] = player;\n      let results = [];\n      for (let j = 0; j < repeat; j++) {\n        for (let k = 0; k < depth; k++) {\n          let _player = k % 2 === 0 ? player * -1 : player;\n          // console.log(possible_move[i] + \" at repeat \" + j);\n          // console.log(\"at depth \" + k);\n          this.rand_move(current_state, _player);\n          // console.log(\"at depth \" + k);\n          // results.push(calculateWinner(current_state));\n          if (calculateWinner(current_state)) {\n            results.push(calculateWinner(current_state));\n            // console.log(\"win\");\n            break;\n          }\n        }\n\n        // console.log(possible_move[i] + \" at repeat \" + j);\n        current_state = state.slice();\n        current_state[possible_move[i][0]] = 0;\n        current_state[possible_move[i][1]] = player;\n      }\n      // console.log(\"ok results: \" + results);\n      let count = 0;\n      results.forEach((x) => {\n        if (x === player) {\n          count += 1;\n        }\n      });\n      possibility.push(count / repeat);\n    }\n    console.log(possible_move, possibility, Math.max(...possibility));\n    current_state = state.slice();\n    current_state[\n      possible_move[possibility.indexOf(Math.max(...possibility))][0]\n    ] = 0;\n    current_state[\n      possible_move[possibility.indexOf(Math.max(...possibility))][1]\n    ] = player;\n    this.setState({\n      square: current_state,\n      step: this.state.step + 1,\n      nextplayer: player * -1,\n    });\n    return \"finished\";\n  }\n\n  drop(ev) {\n    ev.preventDefault();\n    var from = ev.dataTransfer.getData(\"text\");\n\n    if (\n      (this.state.step === 0 &&\n        this.neighbor(parseInt(from, 10), parseInt(ev.target.id, 10))) ||\n      (this.state.step !== 0 &&\n        this.state.nextplayer === this.state.square[from] &&\n        this.neighbor(parseInt(from, 10), parseInt(ev.target.id, 10)))\n    ) {\n      let currentState = this.state.square;\n\n      let target = currentState[from];\n      currentState[from] = currentState[ev.target.id];\n      currentState[ev.target.id] = target;\n      let nxtnextplayer = target * -1; //cannot use this.state.square[from] because it has mutated\n\n      let nxtstep = this.state.step + 1;\n      this.setState(\n        {\n          square: currentState,\n          step: nxtstep,\n          nextplayer: nxtnextplayer,\n        },\n        () => {\n          if (calculateWinner(this.state.square) === 0) {\n            setTimeout(\n              () =>\n                this.evol_move(\n                  this.state.square,\n                  this.state.nextplayer,\n                  this.state.repeat,\n                  this.state.repeat\n                ),\n              500\n            );\n          }\n        }\n      );\n    }\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.square);\n    let status;\n    if (winner) {\n      status = (winner === 1 ? \"Black\" : \"White\") + \" wins!\";\n    } else if (this.state.step !== 0 && this.state.nextplayer === 1) {\n      status = \"Next Player: Black\";\n    } else if (this.state.step !== 0 && this.state.nextplayer === -1) {\n      status = \"Next Player: White\";\n    }\n    let squares = [];\n    for (let i = 0; i < 9; i++) {\n      if (this.state.square[i] === 0) {\n        squares.push(\n          <div\n            className=\"checker\"\n            onDrop={(ev) => this.drop(ev)}\n            onDragOver={allowDrop}\n            id={i.toString()}\n          ></div>\n        );\n      } else {\n        squares.push(\n          <Stone\n            value={i}\n            color={this.state.square[i] === 1 ? \"b\" : \"w\"}\n            drag={(ev) => this.drag(ev)}\n          />\n        );\n      }\n    }\n    // if (this.state.onemore) {\n    //   setTimeout(() => {\n    //     this.evol_move(this.state.square, this.state.nextplayer);\n    //     // this.setState({ onemore: 0 });\n    //   }, 500);\n    // }\n    console.log(this.state.repeat);\n    return (\n      <div>\n        <div className=\"board\">\n          {squares}\n\n          <div className=\"boardimage\"></div>\n        </div>\n        <div className=\"selectwrapper\">\n          <span>Difficulity Level: </span>\n\n          <select\n            // value={\"50\"}\n            onChange={(e) => this.setState({ repeat: e.target.value })}\n          >\n            <option value=\"30\">Easy</option>\n            <option value=\"100\">Medium</option>\n            <option value=\"500\">Hard</option>\n          </select>\n        </div>\n        <div class=\"btwrapper\">\n          <button className=\"button\" onClick={this.initialize}>\n            Start!\n          </button>\n        </div>\n        <div class=\"btwrapper\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              if (calculateWinner(this.state.square) === 0) {\n                this.evol_move(this.state.square, this.state.nextplayer);\n              }\n              setTimeout(() => {\n                if (calculateWinner(this.state.square) === 0) {\n                  this.evol_move(this.state.square, this.state.nextplayer);\n                }\n              }, 500);\n              // this.setState({ onemore: 1 });\n\n              // console.log(this.state.square + \" \" + this.state.nextplayer);\n            }}\n          >\n            Help me move!\n          </button>\n        </div>\n        <div class=\"btwrapper\">\n          <span style={{ fontSize: 23 }}>{status}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Board from \"./board\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}